框架作为服务的调用者（Consumer），程序员作为服务的提供者（Provider）。

框架如何感知并调用若干年后程序员书写的代码？
答：通过一种契约实现，也就是服务调用者和服务提供者达成某种契约，来实现服务的调用（代码的调用）

契约的两种形式：
1. 接口 + 反射 + 适配器模式 （Servlet接口 -> HttpServlet接口）
单独使用"接口 + 反射"的形式，服务提供者（程序员）要实现接口中的所有方法（Servlet接口），很不方便。
因此出现了使用适配器模式来简化服务提供者（程序员）书写代码的复杂程度（HttpServlet接口）。

2. 注解 + 反射
因为注解可以加在方法上，通过反射扫描注解获得方法信息，这样就不需要再使用适配器模式简化代码。
这种方式可以使得服务提供者（程序员）针对特定必要的服务书写代码，不必再实现契约接口中的所有方法。